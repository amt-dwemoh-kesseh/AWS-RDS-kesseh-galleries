AWSTemplateFormatVersion: '2010-09-09'
Description: CI/CD Pipeline for Kesseh Galleries - GitHub to ECS via ECR

Parameters:
  GitHubOwner:
    Type: String
    Description: GitHub username or org name

  GitHubRepo:
    Type: String
    Description: GitHub repo name (e.g. kesseh-galleries)

  GitHubBranch:
    Type: String
    Default: main

  GitHubTokenSecretId:
    Type: String
    Description: Secret ID storing GitHub OAuth token

  ECRRepoName:
    Type: String
    Default: kesseh-galleries-remix

  ECSServiceName:
    Type: String
    Default: kesseh-galleries-remix-service

  ECSClusterName:
    Type: String
    Default: kesseh-galleries-remix-cluster

  TaskDefinitionArn:
    Type: String
    Description: ARN of ECS Task Definition family

Resources:
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: kesseh-galleries-codepipeline-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PipelinePermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - s3:*
                  - iam:PassRole
                  - ecs:*
                  - ecr:*
                  - secretsmanager:GetSecretValue
                Resource: "*"

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "kesseh-galleries-artifacts-${AWS::Region}-${AWS::AccountId}"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: kesseh-galleries-codebuild-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:*
                  - logs:*
                  - s3:*
                Resource: "*"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: kesseh-galleries-build
      Source:
        Type: GITHUB
        Location: !Sub "https://github.com/${GitHubOwner}/${GitHubRepo}.git"
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - echo Logging in to Amazon ECR...
                - aws ecr get-login-password --region ${AWS::Region} | docker login --username AWS --password-stdin ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com
            build:
              commands:
                - docker build -t ${ECRRepoName}:latest .
                - docker tag ${ECRRepoName}:latest ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepoName}:latest
            post_build:
              commands:
                - docker push ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepoName}:latest
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: kesseh-galleries-pipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Sub "{{resolve:secretsmanager:${GitHubTokenSecretId}:SecretString:token}}"
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: DeployToECS
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ECS
                Version: 1
              Configuration:
                ClusterName: !Ref ECSClusterName
                ServiceName: !Ref ECSServiceName
                FileName: imagedefinitions.json
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
